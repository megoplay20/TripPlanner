// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.esv.tripplanner.core_impl.di;

import androidx.room.RoomDatabase;
import com.esv.tripplanner.core_api.repositories.ITripRepository;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DataModule_GetTripRepositoryFactory implements Factory<ITripRepository> {
  private final DataModule module;

  private final Provider<RoomDatabase> databaseProvider;

  public DataModule_GetTripRepositoryFactory(
      DataModule module, Provider<RoomDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public ITripRepository get() {
    return Preconditions.checkNotNull(
        module.getTripRepository(databaseProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<ITripRepository> create(
      DataModule module, Provider<RoomDatabase> databaseProvider) {
    return new DataModule_GetTripRepositoryFactory(module, databaseProvider);
  }
}
