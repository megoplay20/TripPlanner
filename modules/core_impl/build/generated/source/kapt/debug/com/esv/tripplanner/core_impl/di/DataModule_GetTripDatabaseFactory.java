// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.esv.tripplanner.core_impl.di;

import android.app.Application;
import androidx.room.RoomDatabase;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

public final class DataModule_GetTripDatabaseFactory implements Factory<RoomDatabase> {
  private final DataModule module;

  private final Provider<Application> appProvider;

  public DataModule_GetTripDatabaseFactory(DataModule module, Provider<Application> appProvider) {
    this.module = module;
    this.appProvider = appProvider;
  }

  @Override
  public RoomDatabase get() {
    return Preconditions.checkNotNull(
        module.getTripDatabase(appProvider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<RoomDatabase> create(DataModule module, Provider<Application> appProvider) {
    return new DataModule_GetTripDatabaseFactory(module, appProvider);
  }
}
