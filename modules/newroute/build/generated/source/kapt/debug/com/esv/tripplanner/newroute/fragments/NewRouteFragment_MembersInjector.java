// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.esv.tripplanner.newroute.fragments;

import com.esv.tripplanner.core_api.helpers.IDateProcessor;
import com.esv.tripplanner.core_api.helpers.ITypeCaster;
import com.esv.tripplanner.core_api.navigation.INavigatorComponentsProvider;
import com.esv.tripplanner.core_api.repositories.ITripRepository;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class NewRouteFragment_MembersInjector implements MembersInjector<NewRouteFragment> {
  private final Provider<ITypeCaster> typeCasterProvider;

  private final Provider<IDateProcessor> dateProcessorProvider;

  private final Provider<ITripRepository> repositoryProvider;

  private final Provider<INavigatorComponentsProvider> navComponentProvider;

  public NewRouteFragment_MembersInjector(
      Provider<ITypeCaster> typeCasterProvider,
      Provider<IDateProcessor> dateProcessorProvider,
      Provider<ITripRepository> repositoryProvider,
      Provider<INavigatorComponentsProvider> navComponentProvider) {
    this.typeCasterProvider = typeCasterProvider;
    this.dateProcessorProvider = dateProcessorProvider;
    this.repositoryProvider = repositoryProvider;
    this.navComponentProvider = navComponentProvider;
  }

  public static MembersInjector<NewRouteFragment> create(
      Provider<ITypeCaster> typeCasterProvider,
      Provider<IDateProcessor> dateProcessorProvider,
      Provider<ITripRepository> repositoryProvider,
      Provider<INavigatorComponentsProvider> navComponentProvider) {
    return new NewRouteFragment_MembersInjector(
        typeCasterProvider, dateProcessorProvider, repositoryProvider, navComponentProvider);
  }

  @Override
  public void injectMembers(NewRouteFragment instance) {
    injectTypeCaster(instance, typeCasterProvider.get());
    injectDateProcessor(instance, dateProcessorProvider.get());
    injectRepository(instance, repositoryProvider.get());
    injectNavComponent(instance, navComponentProvider.get());
  }

  public static void injectTypeCaster(NewRouteFragment instance, ITypeCaster typeCaster) {
    instance.typeCaster = typeCaster;
  }

  public static void injectDateProcessor(NewRouteFragment instance, IDateProcessor dateProcessor) {
    instance.dateProcessor = dateProcessor;
  }

  public static void injectRepository(NewRouteFragment instance, ITripRepository repository) {
    instance.repository = repository;
  }

  public static void injectNavComponent(
      NewRouteFragment instance, INavigatorComponentsProvider navComponent) {
    instance.navComponent = navComponent;
  }
}
