// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.esv.tripplanner.startscreen.fragments;

import com.esv.tripplanner.core_api.navigation.INavigationProvider;
import com.esv.tripplanner.core_api.repositories.ITripRepository;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class StartFragment_MembersInjector implements MembersInjector<StartFragment> {
  private final Provider<ITripRepository> repositoryProvider;

  private final Provider<INavigationProvider> navigationProvider;

  public StartFragment_MembersInjector(
      Provider<ITripRepository> repositoryProvider,
      Provider<INavigationProvider> navigationProvider) {
    this.repositoryProvider = repositoryProvider;
    this.navigationProvider = navigationProvider;
  }

  public static MembersInjector<StartFragment> create(
      Provider<ITripRepository> repositoryProvider,
      Provider<INavigationProvider> navigationProvider) {
    return new StartFragment_MembersInjector(repositoryProvider, navigationProvider);
  }

  @Override
  public void injectMembers(StartFragment instance) {
    injectRepository(instance, repositoryProvider.get());
    injectNavigationProvider(instance, navigationProvider.get());
  }

  public static void injectRepository(StartFragment instance, ITripRepository repository) {
    instance.repository = repository;
  }

  public static void injectNavigationProvider(
      StartFragment instance, INavigationProvider navigationProvider) {
    instance.navigationProvider = navigationProvider;
  }
}
